name: Maven Build and SBOM

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    strategy:
      matrix:
        project:
          #- normal
          #- quarkus
          - native

    env:
      IMAGE_PUSH: true # Change to true if you want to push images
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/java-sbom-cdx-maven-${{ matrix.project }}
      IMAGE_TAG: ${{ github.sha }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Docker Hub (for pulling base images)
      uses: docker/login-action@v3
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container Registry (for pushing final image)
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up JDK 23
      if: matrix.project != 'native'
      uses: actions/setup-java@v3
      with:
        java-version: 23
        distribution: 'temurin'

    - uses: graalvm/setup-graalvm@v1
      if: matrix.project == 'native'
      with:
        java-version: 23
        distribution: 'graalvm'
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: GraalVM image validation
      if: matrix.project == 'native'
      run: |
        echo "GRAALVM_HOME: $GRAALVM_HOME"
        echo "JAVA_HOME: $JAVA_HOME"
        java --version
        native-image --version

    - name: Grant execute permission for maven
      run: chmod +x ../mvnw
      working-directory: ${{ github.workspace }}/maven-parent/${{ matrix.project }}

    - name: Build JAR with Maven
      if: matrix.project != 'native'
      run: ../mvnw package
      working-directory: ${{ github.workspace }}/maven-parent/${{ matrix.project }}

    - name: Build Native Executable (only for native project)
      if: matrix.project == 'native'
      run: ../mvnw -Pnative native:compile
      working-directory: ${{ github.workspace }}/maven-parent/${{ matrix.project }}

    - name: Generate SBOM
      run: ../mvnw cyclonedx:makeAggregateBom
      working-directory: ${{ github.workspace }}/maven-parent/${{ matrix.project }}

    - name: Show current workspace
      run: |
        echo "Workspace directory structure:"
        sudo apt-get update && sudo apt-get install -y tree
        tree -a -L 4
      working-directory: ${{ github.workspace }}/maven-parent/${{ matrix.project }}

    - name: Build Container Image for Quarkus
      if: matrix.project == 'quarkus'
      run: |
        ../mvnw quarkus:image-build \
          -DskipTests \
          -Dquarkus.container-image.build=true \
          -Dquarkus.container-image.builder=docker \
          -Dquarkus.container-image.push=${{ env.IMAGE_PUSH }} \
          -Dquarkus.container-image.registry=ghcr.io \
          -Dquarkus.container-image.username=${{ github.actor }} \
          -Dquarkus.container-image.password=${{ secrets.GHCR_TOKEN }} \
          -Dquarkus.container-image.group=${{ github.repository_owner }} \
          -Dquarkus.container-image.image=java-sbom-cdx-maven-${{ matrix.project }} \
          -Dquarkus.container-image.tag=${{ github.sha }} \
          -Dquarkus.docker.dockerfile-jvm-path=${{ github.workspace }}/maven-parent/${{ matrix.project }}/src/main/docker/Dockerfile.jvm
      working-directory: ${{ github.workspace }}/maven-parent/${{ matrix.project }}

    - name: Build Container Image for Spring Boot (Maven)
      if: matrix.project != 'quarkus'
      run: |
        CMD="../mvnw spring-boot:build-image \
          -DskipTests \
          -Dspring-boot.build-image.imageName=${IMAGE_NAME}:${IMAGE_TAG} \
          -Dspring-boot.build-image.builder=docker.io/paketobuildpacks/builder-jammy-java-tiny:0.0.20 \
          -Dspring-boot.build-image.env.BP_JVM_VERSION=23 \
          -Ddocker.publishRegistry.username=${{ github.actor }} \
          -Ddocker.publishRegistry.password=${{ secrets.GIT_ACTIONS_PAT }} \
          -Ddocker.publishRegistry.url=ghcr.io" \
          -Dspring-boot.build-image.verboseLogging=true
        
        if [ "${IMAGE_PUSH}" = "true" ]; then
          CMD="$CMD -Dspring-boot.build-image.publish=true"
        fi
        
        eval "$CMD"
      env:
        IMAGE_PUSH: true
      working-directory: ${{ github.workspace }}/maven-parent/${{ matrix.project }}