plugins {
    id 'java'
    id 'io.quarkus' version '3.21.0'
    id 'org.cyclonedx.bom' version '2.0.0'
}

group = 'com.nc'
version = '1.0.0-SNAPSHOT'
//noinspection GroovyUnusedAssignment
name = 'java-sbom-cdx-gradle-quarkus'

//noinspection GroovyUnusedAssignment
archivesBaseName = 'java-sbom-cdx-gradle-quarkus'

repositories {
    mavenCentral()
    maven {
        url 'https://plugins.gradle.org/m2/'
    }
}

dependencies {
    implementation 'io.quarkus:quarkus-container-image-docker'
    implementation enforcedPlatform('io.quarkus:quarkus-bom:3.21.0')
    implementation 'io.quarkus:quarkus-resteasy'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

tasks.named('test') {
    useJUnitPlatform()
}

def envVars = [
        IMAGE_REGISTRY: System.getenv('IMAGE_REGISTRY') ?: 'ghcr.io',
        IMAGE_NAME    : System.getenv('IMAGE_NAME') ?: 'default',
        IMAGE_TAG     : System.getenv('IMAGE_TAG') ?: 'latest',
        IMAGE_AUTHOR  : System.getenv('IMAGE_AUTHOR') ?: 'unknown',
        IMAGE_LICENSE : System.getenv('IMAGE_LICENSE') ?: 'Apache-2.0'
]

// Add selected project properties (like version, group, etc.)
def projectProps = [
        version: project.version,
        group  : project.group,
        name   : project.name
]

// Merge both maps
def allProps = envVars + projectProps

processResources {
    expand(allProps)
}

tasks.named('cyclonedxBom') {
    schemaVersion = "1.6"
    includeConfigs = ["runtimeClasspath"]
}
