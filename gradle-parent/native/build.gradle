plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.graalvm.buildtools.native' version '0.10.4'
    id 'org.cyclonedx.bom' version '2.0.0'
}

group = 'com.nc'
version = '1.0'
//noinspection GroovyUnusedAssignment
archivesBaseName = 'java-sbom-cdx-gradle-native' // This sets the artifactId

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.test {
    useJUnitPlatform()
}

graalvmNative {
    binaries {
        configureEach {
            buildArgs.add("--enable-sbom=cyclonedx,export")
        }
    }
}

tasks.named('bootBuildImage') {
    imageName = "${System.getenv('IMAGE_REGISTRY')}/${System.getenv('IMAGE_GROUP')}/${System.getenv('IMAGE_NAME')}:${System.getenv('IMAGE_TAG') ?: 'latest'}"
    builder = "${System.getenv('BUILDER_IMAGE_NAME')}:${System.getenv('BUILDER_IMAGE_TAG')}"
    publish = System.getenv('IMAGE_PUSH')?.toBoolean() ?: false

    environment = [
            "BP_JVM_VERSION": System.getenv('BP_JVM_VERSION') ?: "23"
    ]

    //noinspection GrUnresolvedAccess
    docker {
        //noinspection GrUnresolvedAccess
        publishRegistry {
            username = System.getenv("IMAGE_REGISTRY_USERNAME")
            password = System.getenv("IMAGE_REGISTRY_PASSWORD")
        }
    }
}

tasks.named('cyclonedxBom') {
    schemaVersion = "1.6"
    includeConfigs = ["runtimeClasspath"]
}
